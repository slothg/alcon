package util{	import com.hexagonstar.env.console.Console;	import com.hexagonstar.util.debug.Debug;		import flash.display.Stage;		/**	 * A simple wrapper class for project-external (and internal) Debug classes.	 * 	 * @author Sascha Balkau	 */	public class Log	{		////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////				private static var _enabled:Boolean = true;		private static var _console:Console;						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * monitor		 */		public static function monitor(stage:Stage):void		{			Debug.monitor(stage);		}						/**		 * debug		 */		public static function debug(data:*):void		{			send(data, Console.LEVEL_DEBUG);		}						/**		 * info		 */		public static function info(data:*):void		{			send(data, Console.LEVEL_INFO);		}						/**		 * warn		 */		public static function warn(data:*):void		{			send(data, Console.LEVEL_WARN);		}						/**		 * error		 */		public static function error(data:*):void		{			send(data, Console.LEVEL_ERROR);		}						/**		 * fatal		 */		public static function fatal(data:*):void		{			send(data, Console.LEVEL_FATAL);		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * set enabled		 */		public static function set enabled(v:Boolean):void		{			init();			_console.trace("Console logging " + (v ? "enabled." : "disabled."));			_enabled = Debug.enabled = v;		}						////////////////////////////////////////////////////////////////////////////////////////		// Private Methods                                                                    //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * send		 * @private		 */		private static function send(data:*, level:int):void		{			if (_enabled)			{				init();				_console.trace(data, level);				Debug.trace(data, level);			}		}						/**		 * init		 * @private		 */		private static function init():void		{			if (!_console) _console = Console.instance;		}	}}