package commands{	import managers.KeyManager;		import model.Config;		import com.hexagonstar.env.command.Command;	import com.hexagonstar.env.command.ICommandListener;	import com.hexagonstar.env.console.Console;	import com.hexagonstar.io.key.Key;		/**	 * InitKeyManagerCommand Class	 * @author Sascha Balkau	 */	public class InitKeyManagerCommand extends Command	{		////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new InitKeyManagerCommand instance.		 */		public function InitKeyManagerCommand(listener:ICommandListener)		{			super(listener);		}						/**		 * Execute the command.		 */ 		override public function execute():void		{			super.execute();						var keyString:String = Config.instance.consoleKey;			var keyCodes:Array = Key.getKeyCodes(keyString);			var km:KeyManager = KeyManager.instance;						km.clearAssignments();			km.assignKeyCombination(keyCodes, Console.instance.toggle);						complete();		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				override public function get name():String		{			return "initKeyManager";		}						////////////////////////////////////////////////////////////////////////////////////////		// Private Methods                                                                    //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * finish		 * @private		 */		override protected function complete():void		{			super.complete();		}	}}