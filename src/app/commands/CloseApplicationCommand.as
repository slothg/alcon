package commands{	import managers.WindowBoundsManager;		import com.hexagonstar.env.command.Command;	import com.hexagonstar.env.command.ICommandListener;		import mx.core.Application;		import flash.desktop.NativeApplication;			/**	 * This command is responsible for closing the application.	 * It first makes sure that the window won't automatically close the application.	 * 	 * @author Sascha Balkau <sascha@hexagonstar.com>	 */	public class CloseApplicationCommand extends Command	{		////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new CloseApplicationCommand instance.		 */		public function CloseApplicationCommand(listener:ICommandListener)		{			super(listener);		}						/**		 * Execute the command.		 */ 		override public function execute():void		{			super.execute();						WindowBoundsManager.instance.saveWindowPosition();						Application.application["stage"].nativeWindow.visible = false;			NativeApplication.nativeApplication.exit();		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				override public function get name():String		{			return "appClose";		}						////////////////////////////////////////////////////////////////////////////////////////		// Event Handlers                                                                     //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Private Methods                                                                    //		////////////////////////////////////////////////////////////////////////////////////////			}}