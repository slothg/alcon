/* * Alcon - ActionScript Logging & Debugging Console. * * Licensed under the MIT License * Copyright (c) 2009 Sascha Balkau / Hexagon Star Softworks *  * Permission is hereby granted, free of charge, to any person obtaining a copy of * this software and associated documentation files (the "Software"), to deal in * the Software without restriction, including without limitation the rights to * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of * the Software, and to permit persons to whom the Software is furnished to do so, * subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */package view{	import managers.ViewActionsManager;		import mx.containers.VBox;	import mx.core.ScrollPolicy;		import flash.events.Event;			/**	 * The Application's main UI wrapper. Can extend Sprite/BaseSprite for Flash	 * applications or any Flex framework container class for Flex applications.	 * 	 * @author Sascha Balkau	 */	public class ApplicationUI extends VBox	{		////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////				private var _mainMenu:MainMenu;		private var _appMonitor:AppMonitor;		private var _tabNav:TabNav;		private var _inputBar:InputBar;		private var _statusBar:StatusBar;						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new ApplicationUI instance.		 */		public function ApplicationUI()		{			super();						visible = false;			Main.instance.addEventListener(Main.APPLICATION_INITIALIZED, onAppInitialized);		}						/**		 * init		 */		public function init():void		{			ViewActionsManager.instance.init();			_mainMenu.init();			_appMonitor.init();			_tabNav.init();			_inputBar.init();			_statusBar.init();		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Event Handlers                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * @private		 */		private function onAppInitialized(e:Event):void		{			init();			visible = true;		}				 				////////////////////////////////////////////////////////////////////////////////////////		// Private Methods                                                                    //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * createChildren		 * @private		 */		override protected function createChildren():void		{			super.createChildren();						percentWidth = 100;			percentHeight = 100;			horizontalScrollPolicy = ScrollPolicy.OFF;			verticalScrollPolicy = ScrollPolicy.OFF;						_mainMenu = MainMenu.instance;						_appMonitor = AppMonitor.instance;			addChild(_appMonitor);						_tabNav = new TabNav();			addChild(_tabNav);						_inputBar = new InputBar();			addChild(_inputBar);						_statusBar = new StatusBar();			addChild(_statusBar);		}	}}