package model{	/**	 * A data model that is used to store config properties loaded by ConfigLoader	 * from the application config file (app.ini). This class must define all the	 * properties matching the properties added to the config file!	 * If a property was not defined or did not match, an error is sent by default	 * to the debug console.<p>	 * 	 * Ideally every defined property should have a default value assigned in case	 * the config file could not be loaded.	 * 	 * @author Sascha Balkau	 */	public class Config	{		////////////////////////////////////////////////////////////////////////////////////////		// Config Data                                                                        //		////////////////////////////////////////////////////////////////////////////////////////				public var consoleEnabled:Boolean;		public var loggingEnabled:Boolean;		public var consoleKey:String;		public var consoleTransparency:Number;				public var autoCheckForUpdates:Boolean;		public var updateURL:String;				public var defaultLocale:String;		public var currentLocale:String;				public var dataFiles:Array;						private static var _instance:Config;						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new instance of the class.		 */		public function Config()		{			if (_instance)			{				throw new Error("Tried to instantiate Config through"					+ " it's constructor. Use Config.instance instead!");			}		}						/**		 * initializes the model data.		 */		public function init():void		{			consoleEnabled = true;			loggingEnabled = true;			consoleKey = "F8";			consoleTransparency = 1.0;						autoCheckForUpdates = true;			updateURL = "";						defaultLocale = "en";						dataFiles = [];		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Returns the Singleton instance of Config.		 */		public static function get instance():Config		{			if (!_instance) _instance = new Config();			return _instance;		}	}}